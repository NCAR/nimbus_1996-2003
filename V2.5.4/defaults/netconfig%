#  FILE: netconfig
#
# Fields are position, display-host, port server host, x-resolution, 
# y-resolution, serial port output for ttya, and for ttyb, and finally the
# project number.
#
# Edit this file as needed for given project setup.  The part you will
# modify is in the example sections that follow all this introductory text, 
# headed with either "POST-PROCESSING clients" or "REAL-TIME clients". 
# The lines that need editing are those that start without a # in the first 
# column. Do NOT, however, remove or modify these lines:
#
mode    dhost    phost    x-res    y-res    ttya    ttyb    pnum
----    ----     -----    -----    -----    ----    ----    ----
#
# All possible names for mode and tty[a|b] are listed in the mode and 
# tty[a|b] columns, respectively, as examples only. Be sure to modify them 
# as needed to fit reality. See the WINDS Maintenance Manual for details on 
# the ttya/b field values.
#
# The mode value is discussed at length in the example entries. Generally, 
# there are two types of WINDS modes: real-time and post-processing, with 
# specific sets of values for each of these. The mode field is used to 
# designate which mode and specific value is to be used.
#
# Replace dhost with display hostname. This is the host on whom the winds
# process is to be displayed. It need not be the same host as the one on which
# winds is executed, but in this case x-protocol display permission must be
# granted for the compute host (do a "man xhost"). You may have as many 
# entries, each with a different dhost value, as needed in this file, to
# provide for all the display hosts in your network.  The longest string 
# allowed for dhost is 64 characters.
#
# WINDS is invoked with optional command line arguments that are used to find 
# an entry here with matching parameters. If there is more than one entry 
# with matching parameters, the first one encountered will be used by WINDS.  
# This includes the invocation without any arguments: the very first entry
# found, in this case, with display host equal to the executing host, will be 
# the one used to configure the session. It's possibly useful for those who 
# invoke WINDS without arguments, e.g. from a menu, to take advantage of this: 
# create as many entries as you need to represent ALL of your datasets, knowing 
# that WINDS (invoked without any arguments) will display the first entry 
# with matching host seen in this file, and simply edit as needed to change 
# the display. 
#
# Replace phost with port server hostname if any -- use value "none" if no 
# printer. The port server host is the host supplying serial ports for
# printing, etc., and often is the same as the dhost (but need not be...). See 
# the WINDS Installation Manual and WINDS Maintenance Manual for details. If 
# a host is named "none", punt. Then contact a WINDS expert for help.  The 
# longest string allowed for phost is 64 characters.
#
# Columns ttya and ttyb correspond to the serial line output ports of same name
# (on Sun backplanes); the values for each should indicate what printer (or, in 
# real-time mode, other serial output) is connected on the port server host.
# The only printers WINDS *explicitly* supports are the HP PaintJet and the
# Epson wide-carriage printer. If you *are* using one of these, or any other
# printer configured to the correct protocol over ttya or ttyb, set the 
# tty[a|b] column(s) to the correct value(s) for the type of printer(s) in use. 
# You need do nothing here for PostScript printing. See the WINDS Installation 
# / Maintenance Manuals for details.
#
# Replace pnum with project number.  A project number can be any value you want 
# to give as an identifier for the given dataset(s) to be processed; it can be 
# a name or a number or any ASCII string. Often, datasets have a project number 
# already associated with them on distribution, and sometimes it makes sense 
# to retain that value (consulting, etc.). The only important connection the 
# pnum value must have is its relation to dataset files' location if the 
# WINDS default directory $WINDS/data/<pnum> is used and, regardless of 
# dataset location, its relation to the project config files in the 
# $WINDS/project/<pnum> subdirectory. 
#
# In post-processing mode, the dataset name field (netcdfname)
# must be filled in as well; its value is used to construct 
# the filename of the dataset to be used for the WINDS session. See the 
# WINDS Installation Manual, section titled "Installing Datasets" for details.
# 
# Add your own comments to this file by starting a line with # character.
# Please note that no line (as defined as the record that will be read in by
# C library function gets()) in this file is to exceed 128 characters.
# All of these lines already here are obviously OK, so just use them as a 
# template and your comments won't blow up the software.
# 
# See the WINDS Maintenance Manual for more info on all of above (section 
# titled "Network Configuration").  
#
##################################################################
# POST-PROCESSING clients:
#
# Field mode is netcdf, to process Unidata's netCDF format files
#
# Note special format for pnum field in netcdf mode.  Filename 
# entries ARE case-sensitive.  See WINDS Installation Manual for conventions
# assumed on pnum value's relation to files used.
# 
# Values are supplied for the ttya and ttyb columns as examples only.
# Be sure to modify them as needed to fit reality. See the WINDS Maintenance 
# Manual for details on the ttya/b field values.
#
# The value for either <pnum> or <netcdfname> should be no 
# more than 5 characters in length. Longer values than this will work ok, but 
# will not be displayed in full in the WINDS Control Panel area. However, 
# the longest value for pnum is 16 characters, and for either dataset name is
# 64 characters.
#
netcdf     dhost    phost    1136    880    none    none     pnum-netcdfname
#
# Post-processing clients should ignore all other sections of this file.
#
##################################################################
# REAL-TIME clients: Values are supplied for the ttya and ttyb columns as 
# examples only. Be sure to modify them as needed to fit reality. See the
# WINDS Maintenance Manual for details on the ttya/b field values.
#
# In-house, you'll use mode setup for preliminary sessions until a dataset 
# is available.
#
setup    dhost    phost    1136    880    epson    none    pnum
#
# In-house simulated real-time mode is devctl, getting data from ADS data file.
#
devctl    dhost    phost    1136    880    lcd    none    pnum
#
# Position ctl is the onboard winds host, i.e. the main controlling station 
# providing communication with ads. Be sure to set the project number for ctl 
# AND the appropriate ads position host. Setting it for the calcart (see below) 
# is also an excellent idea. IMPORTANT: make sure the FIRST entry in this
# file with a given winds-host position (e.g., ctl) is the one designating
# the project number and winds-host for the project or the print server, e.g, 
# will not find its display-host's associated winds-host and will terminate! 
#
ctl    dhost    phost    1136    880    pjet    none    pnum
#
# choose one of ads dhost's based on which airplane. ADS host does not have
# printing or serial ports, ergo those values are "none". It also does not
# display anything, so x/y-resolution can be zeroes. Be sure to set project
# number (pnum) as well as DELETING IRRELEVANT ads ENTRIES:
#
ads    lab-ads         none       0      0    none    none    pnum
ads    kingair-ads     none       0      0    none    none    pnum
ads    electra-ads     none       0      0    none    none    pnum
ads    sabre-ads       none       0      0    none    none    pnum
#
# Onboard, mode other than ctl are slaves in some other airplane position.
#
# airplane position: cockpit
#
ckp    dhost    phost    1136    880    ascii    none    pnum
#
# airplane position: forward cabin
#
fwd    dhost    phost    1136    880    spjet    none    pnum
#
# airplane position: outboard left
#
obl    dhost    phost    1136    880    none    none    pnum
#
# airplane position: outboard right
#
obr    dhost    phost    1136    880    none    none    pnum
#
# airplane position: inboard left
#
ibl    dhost    phost    1136    880    none    none    pnum
#
# airplane position: inboard right
#
ibr    dhost    phost    1136    880    none    none    pnum
#
# use the dev mode for general purpose slave display. These hosts will not
# be auto-started or auto-killed in the onboard turnkey mechanisms, but are 
# useful for concurrent sessions off-board, e.g. on the cal-cart or in-house
# debugging.  You don't want the calcart auto-killed since it may on the 
# network in session with some other airplane when your airplane shuts down.
#
dev    dhost    phost    1136    880    none    none    pnum
#
# Retain line for calcart (currently tonopah), modifying pnum as needed. We
# assume here that an HP PaintJet is attached to tonopah's serial port A.
#
dev     tonopah tonopah 1136    880     pjet    none    pnum
# 
# Two x/y-resolutions are available for WINDS display. The PC-size is 640 x 470 
# (entry below).  This shows only one display setup at a time; the standard
# Sun-size resolution (1136 x 880) shows four at a time. The onboard RDI
# laptop moondog is an example of such a smaller display. To configure moondog 
# into the onboard network, replace mode with the onboard position (usually fwd 
# for moondog), replace dhost with moondog and replace pnum with the project 
# number. In the fwd position, moondog will likely NOT have a printer attached.
# You can also use the full-size resolution on RDI's using olvwm and simply
# pan around to see WINDS a quadrant at a time.
#
dev     dhost none 640    470     none    none    pnum
#
# nfs entry is used to determine shell script variable "WindsServer". The
# entry for the onboard position entry for same host MUST PRECEDE THIS ENTRY!
# 2nd column is name of NFS server; 3rd is optionally the location for 
# saving core files found during the monitor's examinations of file system
#
nfs     nfsserver core-file-save-directory 0    0     none    none    pnum
