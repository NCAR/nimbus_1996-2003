!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/darren@hiebert.com/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://darren.hiebert.com/ctags/	/official site/
!_TAG_PROGRAM_VERSION	4.0.2	//
Add2DtoList	pms2_data.c	/^void Add2DtoList(RAWTBL *varp)	\/* Called by hdr_decode.c *\/$/;"	f
AddMore2dData	pms2_data.c	/^static void AddMore2dData(Queue *probe, long thisTime, int probeCnt)$/;"	f	file:
CALENDAR_SIZE	gpsTans.c	164;"	d	file:
DAYS_PER_LEAP_YEAR	gpsTans.c	162;"	d	file:
DAYS_PER_WEEK	gpsTans.c	163;"	d	file:
DAYS_PER_YEAR	gpsTans.c	161;"	d	file:
DEG_RAD	const.c	/^const double DEG_RAD	= M_PI \/ 180.0;$/;"	v
FACT	pms1_hskp.c	35;"	d	file:
FANV	pms1_hskp.c	38;"	d	file:
FREF	pms1_hskp.c	40;"	d	file:
FRST	pms1_hskp.c	34;"	d	file:
FSIG	pms1_hskp.c	39;"	d	file:
FSST	pms1_hskp.c	36;"	d	file:
FSTB	pms1_hskp.c	33;"	d	file:
FTMIN	const.c	/^const NR_TYPE FTMIN  = 0.00508;$/;"	v
FTMP	pms1_hskp.c	37;"	d	file:
FTMTR	const.c	/^const NR_TYPE FTMTR  = 0.3048;$/;"	v
GPS3_BASE_YEAR	gpsTans.c	166;"	d	file:
INS_MASK	irsL51.c	33;"	d	file:
KTS2MS	const.c	/^const NR_TYPE KTS2MS = 0.514791;$/;"	v
LEAP_YEAR_MOD	gpsTans.c	165;"	d	file:
MASK	irsL51.c	34;"	d	file:
MPS2	const.c	/^const NR_TYPE MPS2   = 9.7959;$/;"	v
MSIGN	irsL51.c	35;"	d	file:
P6E01	pms1_hskp.c	53;"	d	file:
P6E64	pms1_hskp.c	54;"	d	file:
P6RST	pms1_hskp.c	51;"	d	file:
P6TMP	pms1_hskp.c	52;"	d	file:
PACT	pms1_hskp.c	43;"	d	file:
PBRS	pms1_hskp.c	48;"	d	file:
PFLW	pms1_hskp.c	47;"	d	file:
PREF	pms1_hskp.c	46;"	d	file:
PSTT	pms1_hskp.c	44;"	d	file:
PTMP	pms1_hskp.c	45;"	d	file:
Particle	pms2_data.c	/^typedef struct particle Particle;$/;"	t	file:
Process	pms2_data.c	/^void Process(Queue *probe, P2d_rec *rec, int probeCnt)$/;"	f
RAD_DEG	const.c	/^const double RAD_DEG	= 180.0 \/ M_PI;$/;"	v
RESOLV14BIT	const.c	/^const NR_TYPE RESOLV14BIT	= 180.0 \/ 8192.0;$/;"	v
RESOLV16BIT	const.c	/^const NR_TYPE RESOLV16BIT	= 360.0 \/ 65536.0;$/;"	v
SECS_PER_DAY	gpsTans.c	158;"	d	file:
SECS_PER_HOUR	gpsTans.c	159;"	d	file:
SECS_PER_MIN	gpsTans.c	160;"	d	file:
angle	irsL51.c	/^static double angle(value)$/;"	f	file:
arinc15bits	irsHw.c	/^static const double  arinc15bits = (1.0 \/ (1 << 15));$/;"	v	file:
arinc20bits	irsHw.c	/^static const double  arinc20bits = (1.0 \/ (1 << 20)) * 180.0;$/;"	v	file:
calcDateTime	gpsTans.c	/^int calcDateTime(int week, int secs, int gps_off)$/;"	f
chgme	APN159.c	/^static NR_TYPE	chgme[250];	\/* 250 = Max Rate	*\/$/;"	v	file:
computeJulianDay	gpsTans.c	/^int computeJulianDay(int year, int month, int day)$/;"	f
croll	irsL51.c	/^static NR_TYPE	croll[50];$/;"	v	file:
decodeJulianDay	gpsTans.c	/^int decodeJulianDay(int julian_day, int year, int *month, int *day)$/;"	f
dmech	dme.c	/^static NR_TYPE	dmech, dmefl, dmedi;$/;"	v	file:
dmedi	dme.c	/^static NR_TYPE	dmech, dmefl, dmedi;$/;"	v	file:
dmefl	dme.c	/^static NR_TYPE	dmech, dmefl, dmedi;$/;"	v	file:
dsalt	avaps.c	/^		dslat[MAX_AVAPS], dslon[MAX_AVAPS], dsalt[MAX_AVAPS],$/;"	v	file:
dsat	avaps.c	/^static NR_TYPE	dstime[MAX_AVAPS], dsps[MAX_AVAPS], dsat[MAX_AVAPS],$/;"	v	file:
dslat	avaps.c	/^		dslat[MAX_AVAPS], dslon[MAX_AVAPS], dsalt[MAX_AVAPS],$/;"	v	file:
dslon	avaps.c	/^		dslat[MAX_AVAPS], dslon[MAX_AVAPS], dsalt[MAX_AVAPS],$/;"	v	file:
dsmr	avaps.c	/^		dswd[MAX_AVAPS], dsws[MAX_AVAPS], dsmr[MAX_AVAPS],$/;"	v	file:
dsps	avaps.c	/^static NR_TYPE	dstime[MAX_AVAPS], dsps[MAX_AVAPS], dsat[MAX_AVAPS],$/;"	v	file:
dstime	avaps.c	/^static NR_TYPE	dstime[MAX_AVAPS], dsps[MAX_AVAPS], dsat[MAX_AVAPS],$/;"	v	file:
dsvspd	avaps.c	/^		dsvspd[MAX_AVAPS];$/;"	v	file:
dswd	avaps.c	/^		dswd[MAX_AVAPS], dsws[MAX_AVAPS], dsmr[MAX_AVAPS],$/;"	v	file:
dsws	avaps.c	/^		dswd[MAX_AVAPS], dsws[MAX_AVAPS], dsmr[MAX_AVAPS],$/;"	v	file:
edge	pms2_data.c	/^	bool	edge;	\/* particle touched edge	*\/$/;"	m	struct:particle
fte	etorq.c	/^static NR_TYPE	fte[] =	{ -925.09894, 0.16334911, 4.9590147e-07 };$/;"	v	file:
h	pms2_data.c	/^	int	w, h;$/;"	m	struct:particle
initP2DH	pms2_hskp.c	/^void initP2DH(RAWTBL *varp)$/;"	f
irsInit	irsHw.c	/^void irsInit(RAWTBL *varp)$/;"	f
lez	etorq.c	/^static NR_TYPE	lez[] =	{ 1847.9928, 0.17078673, -2.2302340e-08 };$/;"	v	file:
look	dme.c	/^static int	look[] = {9, 24, 20, 12, 10, 6, 5, 3, 18, 17};$/;"	v	file:
msec	pms2_data.c	/^        long	msec;$/;"	m	struct:particle
mulFactor	pms2_hskp.c	/^static NR_TYPE mulFactor = 1.0;$/;"	v	file:
ntohf	const.c	/^float ntohf(float inF)$/;"	f
otf	etorq.c	/^static NR_TYPE	otf[] =	{ 1847.3864, 0.17202371, -2.7902932e-07 };$/;"	v	file:
particle	pms2_data.c	/^struct particle$/;"	s	file:
pitchlcorr	irsHw.c	/^static NR_TYPE	pitchlcorr = 0.0,	\/* PITCH_BIAS_1   *\/$/;"	v	file:
pitchrcorr	irsHw.c	/^		pitchrcorr = 0.0,	\/* PITCH_BIAS_2   *\/$/;"	v	file:
posLag	gpsTans.c	/^static int	velLag, posLag;$/;"	v	file:
probeIDorder	pms2_data.c	/^static short	probeIDorder[MAX_PMS2] = { 0, 0, 0, 0 };$/;"	v	file:
probes	pms2_data.c	/^static Queue	*probes[MAX_PMS2];$/;"	v	file:
startMilliSec	pms2_data.c	/^static short	startMilliSec[MAX_PMS2];$/;"	v	file:
startTime	pms2_data.c	/^static long	startTime[MAX_PMS2];$/;"	v	file:
thdglcorr	irsHw.c	/^		thdglcorr  = 0.0,	\/* HEADING_BIAS_1 *\/$/;"	v	file:
thdgrcorr	irsHw.c	/^		thdgrcorr  = 0.0;	\/* HEADING_BIAS_2 *\/$/;"	v	file:
time	pms2_data.c	/^	long	time;	\/* Seconds since mid-night	*\/$/;"	m	struct:particle
timeWord	pms2_data.c	/^	ulong	timeWord;$/;"	m	struct:particle
transportDelay	gpsHw.c	/^static const int	transportDelay = 0;$/;"	v	file:
twoD	pms2_data.c	/^static float	twoD[MAX_PMS2][BINS_64];$/;"	v	file:
velLag	gpsTans.c	/^static int	velLag, posLag;$/;"	v	file:
velocity	irsL51.c	/^static double velocity(value)$/;"	f	file:
w	pms2_data.c	/^	int	w, h;$/;"	m	struct:particle
xl2d_hskp0	pms2_hskp.c	/^void xl2d_hskp0(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_hskp1	pms2_hskp.c	/^void xl2d_hskp1(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_hskp2	pms2_hskp.c	/^void xl2d_hskp2(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_hskp3	pms2_hskp.c	/^void xl2d_hskp3(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_hskp4	pms2_hskp.c	/^void xl2d_hskp4(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_hskp5	pms2_hskp.c	/^void xl2d_hskp5(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_hskp6	pms2_hskp.c	/^void xl2d_hskp6(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_hskp7	pms2_hskp.c	/^void xl2d_hskp7(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xl2d_shadow	pms2_hskp.c	/^void xl2d_shadow(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlAsync	async.c	/^void xlAsync(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlGrey_hskp0	grey_hskp.c	/^void xlGrey_hskp0(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlGrey_hskp1	grey_hskp.c	/^void xlGrey_hskp1(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlJplTdl	B57.c	/^void xlJplTdl(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlNOzone	B57.c	/^void xlNOzone(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlOneD	pms2_data.c	/^void xlOneD(RAWTBL *varp, void *in, NR_TYPE *np)$/;"	f
xlP16bin	pms1_data.c	/^void xlP16bin(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlP16v2bin	pms1_data.c	/^void xlP16v2bin(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlP260bin	pms1_data.c	/^void xlP260bin(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlP300bin	pms1_data.c	/^void xlP300bin(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlP32v2_sum	pms1_data.c	/^void xlP32v2_sum(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlP32v2bin	pms1_data.c	/^void xlP32v2bin(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlP64v2bin	pms1_data.c	/^void xlP64v2bin(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlSPP100	pms1_data.c	/^void xlSPP100(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlSPP200	pms1_data.c	/^void xlSPP200(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlSPP300	pms1_data.c	/^void xlSPP300(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlTwoD	pms2_data.c	/^void xlTwoD(RAWTBL *varp, void *in, NR_TYPE *np)$/;"	f
xlTwodInit	pms2_data.c	/^void xlTwodInit(RAWTBL *varp)$/;"	f
xlaact	asas.c	/^void xlaact(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlalat	irsL51.c	/^void xlalat(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlalon	irsL51.c	/^void xlalon(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlalpha	irsL51.c	/^void xlalpha(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlatmns	loranc.c	/^void xlatmns(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlblata	irsHw.c	/^void xlblata(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlblona	irsHw.c	/^void xlblona(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlbnorma	irsHw.c	/^void xlbnorma(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlbpitchr	irsHw.c	/^void xlbpitchr(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlbrollr	irsHw.c	/^void xlbrollr(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlbyawr	irsHw.c	/^void xlbyawr(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlccep	loranc.c	/^void xlccep(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlccgs	loranc.c	/^void xlccgs(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlcctk	loranc.c	/^void xlcctk(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlchgme	APN159.c	/^void xlchgme(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlclat	loranc.c	/^void xlclat(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlclon	loranc.c	/^void xlclon(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlclortm	loranc.c	/^void xlclortm(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlcmagvr	loranc.c	/^void xlcmagvr(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlcnavtm	loranc.c	/^void xlcnavtm(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlcroll51	irsL51.c	/^void xlcroll51(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlcstat	loranc.c	/^void xlcstat(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlctmlag	loranc.c	/^void xlctmlag(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlcwarn	loranc.c	/^void xlcwarn(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlday	time.c	/^void xlday(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldmech	dme.c	/^void xldmech(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xldmedi	dme.c	/^void xldmedi(RAWTBL *varp, void *pdme, NR_TYPE *output)$/;"	f
xldmefl	dme.c	/^void xldmefl(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xldsat	avaps.c	/^void xldsat(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldsgalt	avaps.c	/^void xldsgalt(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldslat	avaps.c	/^void xldslat(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldslon	avaps.c	/^void xldslon(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldsmr	avaps.c	/^void xldsmr(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldsps	avaps.c	/^void xldsps(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldstime	avaps.c	/^void xldstime(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldsvspd	avaps.c	/^void xldsvspd(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldswd	avaps.c	/^void xldswd(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xldsws	avaps.c	/^void xldsws(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xletorq	etorq.c	/^void xletorq(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xletorq	template.c	/^void xletorq(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlevent	event.c	/^void xlevent(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat0	float.c	/^void xlfloat0(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat1	float.c	/^void xlfloat1(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat2	float.c	/^void xlfloat2(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat3	float.c	/^void xlfloat3(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat4	float.c	/^void xlfloat4(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat5	float.c	/^void xlfloat5(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat6	float.c	/^void xlfloat6(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat7	float.c	/^void xlfloat7(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat8	float.c	/^void xlfloat8(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfloat9	float.c	/^void xlfloat9(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfph0	B57.c	/^void xlfph0(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfph1	B57.c	/^void xlfph1(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlfrange	fssp.c	/^void xlfrange(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlfrange2	fssp.c	/^void xlfrange2(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlfrange3	fssp.c	/^void xlfrange3(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlfreset	fssp.c	/^void xlfreset(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlfstrob	fssp.c	/^void xlfstrob(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgalt	gpsTans.c	/^void xlgalt(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlghalt	gpsHw.c	/^void xlghalt(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghgspd	gpsHw.c	/^void xlghgspd(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghhdop	gpsHw.c	/^void xlghhdop(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghhfom	gpsHw.c	/^void xlghhfom(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghlat	gpsHw.c	/^void xlghlat(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghlatf	gpsHw.c	/^void xlghlatf(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghlon	gpsHw.c	/^void xlghlon(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghlonf	gpsHw.c	/^void xlghlonf(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghmstat	gpsHw.c	/^void xlghmstat(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghstat	gpsHw.c	/^void xlghstat(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghutc	gpsHw.c	/^void xlghutc(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghvdop	gpsHw.c	/^void xlghvdop(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghvew	gpsHw.c	/^void xlghvew(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghvfom	gpsHw.c	/^void xlghvfom(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghvns	gpsHw.c	/^void xlghvns(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlghvzi	gpsHw.c	/^void xlghvzi(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlglat	gpsTans.c	/^void xlglat(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlglon	gpsTans.c	/^void xlglon(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmalt	gpsMag.c	/^void xlgmalt(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmgeoh	gpsMag.c	/^void xlgmgeoh(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmlat	gpsMag.c	/^void xlgmlat(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmlon	gpsMag.c	/^void xlgmlon(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmmode	gpsMag.c	/^void xlgmmode(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmode	gpsTans.c	/^void xlgmode(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmtime	gpsMag.c	/^void xlgmtime(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmvew	gpsMag.c	/^void xlgmvew(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgmvns	gpsMag.c	/^void xlgmvns(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgpalt	gpsPps.c	/^void xlgpalt(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgplat	gpsPps.c	/^void xlgplat(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgplon	gpsPps.c	/^void xlgplon(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgptime	gpsPps.c	/^void xlgptime(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgpvew	gpsPps.c	/^void xlgpvew(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgpvns	gpsPps.c	/^void xlgpvns(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgpvspd	gpsPps.c	/^void xlgpvspd(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlgsi	irsL51.c	/^void xlgsi(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgstat	gpsTans.c	/^void xlgstat(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgtimp	gpsTans.c	/^void xlgtimp(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgtimv	gpsTans.c	/^void xlgtimv(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgvew	gpsTans.c	/^void xlgvew(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgvns	gpsTans.c	/^void xlgvns(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlgvzi	gpsTans.c	/^void xlgvzi(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlhgm	hgm.c	/^void xlhgm(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlhgm232	APN232.c	/^void xlhgm232(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlhgm232s	APN232.c	/^void xlhgm232s(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlhgme	APN159.c	/^void xlhgme(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlhour	time.c	/^void xlhour(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlialt	irsHw.c	/^void xlialt(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlidrift	irsHw.c	/^void xlidrift(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xligspd	irsHw.c	/^void xligspd(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlilat	irsHw.c	/^void xlilat(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlilon	irsHw.c	/^void xlilon(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlinssec	irsL51.c	/^void xlinssec(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlipitch	irsHw.c	/^void xlipitch(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xliroll	irsHw.c	/^void xliroll(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlithdg	irsHw.c	/^void xlithdg(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlitrkart	irsHw.c	/^void xlitrkart(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlittrka	irsHw.c	/^void xlittrka(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlivew	irsHw.c	/^void xlivew(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlivns	irsHw.c	/^void xlivns(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlivspd	irsHw.c	/^void xlivspd(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xliwd	irsHw.c	/^void xliwd(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xliws	irsHw.c	/^void xliws(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xllag10	irsHw.c	/^void xllag10(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xllag25	irsHw.c	/^void xllag25(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xllag5	irsHw.c	/^void xllag5(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xllag50	irsHw.c	/^void xllag50(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xllah2o	B57.c	/^void xllah2o(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_Pv0	tdl.c	/^void xllh_Pv0(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_indexmax	tdl.c	/^void xllh_indexmax(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_pp2f	tdl.c	/^void xllh_pp2f(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_ppmv	tdl.c	/^void xllh_ppmv(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_press	tdl.c	/^void xllh_press(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_relhum	tdl.c	/^void xllh_relhum(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_temp	tdl.c	/^void xllh_temp(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_vmr	tdl.c	/^void xllh_vmr(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xllh_yzero	tdl.c	/^void xllh_yzero(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlmin	time.c	/^void xlmin(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlmonth	time.c	/^void xlmonth(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlmruv	uvhyg.c	/^void xlmruv(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xloFlow	pms1_hskp.c	/^void xloFlow(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlobbcod	ophir3.c	/^void xlobbcod(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlodetdc	ophir3.c	/^void xlodetdc(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlodetsg	ophir3.c	/^void xlodetsg(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlogain	ophir3.c	/^void xlogain(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlosmotr	ophir3.c	/^void xlosmotr(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlotbbc	ophir3.c	/^void xlotbbc(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlotbbf	ophir3.c	/^void xlotbbf(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlotbnch	ophir3.c	/^void xlotbnch(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlotbox	ophir3.c	/^void xlotbox(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlotdet	ophir3.c	/^void xlotdet(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlotsnt	ophir3.c	/^void xlotsnt(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlpartspace	pms1_ps.c	/^void xlpartspace(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlphdg51	irsL51.c	/^void xlphdg51(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlpitch51	irsL51.c	/^void xlpitch51(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlpms16_hskp0	pms1_hskp.c	/^void xlpms16_hskp0(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms16_hskp1	pms1_hskp.c	/^void xlpms16_hskp1(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms16_hskp2	pms1_hskp.c	/^void xlpms16_hskp2(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms16_hskp3	pms1_hskp.c	/^void xlpms16_hskp3(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms16_hskp4	pms1_hskp.c	/^void xlpms16_hskp4(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms16_hskp5	pms1_hskp.c	/^void xlpms16_hskp5(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms16_hskp6	pms1_hskp.c	/^void xlpms16_hskp6(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms16_hskp7	pms1_hskp.c	/^void xlpms16_hskp7(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms32_hskp1	pms1_hskp.c	/^void xlpms32_hskp1(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms32_hskp2	pms1_hskp.c	/^void xlpms32_hskp2(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms32_sum	pms1_hskp.c	/^void xlpms32_sum(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp0	pms1_hskp.c	/^void xlpms64_hskp0(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp1	pms1_hskp.c	/^void xlpms64_hskp1(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp2	pms1_hskp.c	/^void xlpms64_hskp2(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp3	pms1_hskp.c	/^void xlpms64_hskp3(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp4	pms1_hskp.c	/^void xlpms64_hskp4(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp5	pms1_hskp.c	/^void xlpms64_hskp5(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp6	pms1_hskp.c	/^void xlpms64_hskp6(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpms64_hskp7	pms1_hskp.c	/^void xlpms64_hskp7(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlpsfd	psfd.c	/^void xlpsfd(RAWTBL *varp, void *p, NR_TYPE *output)$/;"	f
xlpsfd_ADS2	psfd.c	/^void xlpsfd_ADS2(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlrejAT	pms1_hskp.c	/^void xlrejAT(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlrejDOF	pms1_hskp.c	/^void xlrejDOF(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlroll51	irsL51.c	/^void xlroll51(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlsec	time.c	/^void xlsec(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlserial	serial.c	/^void xlserial(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlthi	irsL51.c	/^void xlthi(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xltrki	irsL51.c	/^void xltrki(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xluvchrf	uvhyg.c	/^void xluvchrf(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xluvchsp	uvhyg.c	/^void xluvchsp(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xluvhref	uvhyg.c	/^void xluvhref(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xluvhsmp	uvhyg.c	/^void xluvhsmp(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xluvkrrf	uvhyg.c	/^void xluvkrrf(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xluvkrsp	uvhyg.c	/^void xluvkrsp(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xluvpvol	uvhyg.c	/^void xluvpvol(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xluvtvol	uvhyg.c	/^void xluvtvol(RAWTBL *varp, void *p, NR_TYPE *np)$/;"	f
xlvacc	irsHw.c	/^void xlvacc(RAWTBL *varp, void *input, NR_TYPE *np)$/;"	f
xlvzi51	irsL51.c	/^void xlvzi51(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlxpsfd	psfd.c	/^void xlxpsfd(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlxvi	irsL51.c	/^void xlxvi(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlyear	time.c	/^void xlyear(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
xlyvi	irsL51.c	/^void xlyvi(RAWTBL *varp, void *input, NR_TYPE *output)$/;"	f
